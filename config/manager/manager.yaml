apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: system
---
apiVersion: v1
kind: Service
metadata:
  name: controller-manager-service
  namespace: system
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
spec:
  selector:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  ports:
  - port: 443
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
      controller-tools.k8s.io: "1.0"
  serviceName: controller-manager-service
  template:
    metadata:
      labels:
        control-plane: controller-manager
        controller-tools.k8s.io: "1.0"
    spec:
      containers:
      - command:
        - /manager
        image: controller:latest
        imagePullPolicy: Always
        name: manager
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: AZURE_AUTH_LOCATION
            value: /.azure/service-account.json
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /.gce/service-account.json
          - name: PACKET_AUTH_TOKEN
            value: "{{PACKET_AUTH_TOKEN}}"
        resources:
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 9876
          name: webhook-server
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp/cert
          name: cert
          readOnly: true
        - mountPath: /.azure
          name: azure-credentials
        - name: gce-credentials
          mountPath: /.gce
        - name: aws-credentials
          mountPath: /.aws
        - name: certs
          mountPath: /etc/ssl/certs
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-secret
      - name: azure-credentials
        secret:
          secretName: azure-credentials
      - name: gce-credentials
        secret:
          secretName: gce-credentials
      - name: aws-credentials
        secret:
          secretName: aws-credentials
      - name: certs
        hostPath:
          path: /etc/ssl/certs
---
apiVersion: v1
kind: Secret
metadata:
  name: webhook-server-secret
  namespace: system
